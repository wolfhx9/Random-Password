* {
    margin: 0;
    padding: 0;
    font-family: "poppins", sans-serif;
    box-sizing: border-box;
    /* scrollbar-width: none; */
}

body {
    background: #002339;
    color: #fff;
}

.continer {
    margin: 12%;
    margin-bottom: 0 !important;
    width: 90%;
    max-width: 700px;
}

.continer h1 {
    font-size: 3rem;
    font-weight: 500;
    padding-bottom: 10px;
}

.continer h1 span {
    color: hsl(260 97% 61% / 0.75);
    padding-bottom: 20px;
    border-bottom: 5px solid hsl(260 97% 61% / 0.75);
}

.display {
    width: 100%;
    margin: 50px 0px;
    background-color: white;
    color: #333;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 26px 20px;
    border-radius: 5px;
}
/* Copy Button */ 
.copy {
  /* button */
  --button-bg: #353434;
  --button-hover-bg: #464646;
  --button-text-color: #CCCCCC;
  --button-hover-text-color: hsl(260 97% 61% / 0.75);
  --button-border-radius: 10px;
  --button-diameter: 60px;
  --button-outline-width: 1px;
  --button-outline-color: rgb(141, 141, 141);
  --tooltip-bg: #f4f3f3;
  --toolptip-border-radius: 4px;
  --tooltip-font-family: Menlo, Roboto Mono, monospace;
  --tooltip-font-size: 12px;
  --tootip-text-color: rgb(50, 50, 50);
  --tooltip-padding-x: 7px;
  --tooltip-padding-y: 7px;
  --tooltip-offset: 8px;
}
.copy {
    box-sizing: border-box;
    width: var(--button-diameter);
    height: var(--button-diameter);
    border-radius: var(--button-border-radius);
    background-color: var(--button-bg);
    color: var(--button-text-color);
    border: none;
    cursor: pointer;
    position: relative;
    outline: none;
}
.tooltip {
    position: absolute;
    opacity: 0;
    visibility: 0;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
    font: var(--tooltip-font-size) var(--tooltip-font-family);
    color: var(--tootip-text-color);
    background: var(--tooltip-bg);
    padding: var(--tooltip-padding-y) var(--tooltip-padding-x);
    border-radius: var(--toolptip-border-radius);
    pointer-events: none;
    transition: all var(--tooltip-transition-duration) cubic-bezier(0.68, -0.55, 0.265, 1.55);
}
.tooltip::before {
    content: attr(data-text-initial);
}
.tooltip::after {
    content: "";
    position: absolute;
    bottom: calc(var(--tooltip-padding-y) / 2 * -1);
    width: var(--tooltip-padding-y);
    height: var(--tooltip-padding-y);
    background: inherit;
    left: 50%;
    transform: translateX(-50%) rotate(45deg);
    z-index: -999;
    pointer-events: none;
}
.copy svg {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
.checkmark {
    display: none;
}
/* actions */
.copy:hover .tooltip,
.copy:focus:not(:focus-visible) .tooltip {
    opacity: 1;
    visibility: visible;
    top: calc((100% + var(--tooltip-offset)) * -1);
}
.copy:focus:not(:focus-visible) .tooltip::before {
    content: attr(data-text-end);
}
.copy:focus:not(:focus-visible) .clipboard {
    display: none;
}
.copy:focus:not(:focus-visible) .checkmark {
    display: block;
}
.copy:hover,
.copy:focus {
    background-color: var(--button-hover-bg);
}
.copy:active {
    outline: var(--button-outline-width) solid var(--button-outline-color);
}
.copy:hover svg {
    color: var(--button-hover-text-color);
}

input {
    border: none;
    outline: none;
    font-size: 2.3rem;
}

/* Generate Button */
 
.sparkle-button {
    --active: 0;
    --bg: radial-gradient(
			40% 50% at center 100%,
			hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
			transparent
        ),
		radial-gradient(
			80% 100% at center 120%,
			hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
			transparent
		),
		hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
    background: var(--bg);
    font-size: 1.2rem;
    font-weight: 500;
    border: 0;
    cursor: pointer;
    padding: 1em 1em;
    display: flex;
    align-items: center;
    gap: 0.25em;
    white-space: nowrap;
    border-radius: 100px;
    position: relative;
    box-shadow: 0 0 calc(var(--active) * 3em) calc(var(--active) * 1em) hsl(260 97% 61% / 0.75),
		0 0em 0 0 hsl(260 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
		0 -0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc(var(--active) * 60%)) inset;
    transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
    scale: calc(1 + (var(--active) * 0.1));
    transition: .3s;
}
.sparkle-button:active {
    scale: 1;
    transition: .3s;
}
.sparkle path {
    color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
    transform-box: fill-box;
    transform-origin: center;
    fill: currentColor;
    stroke: currentColor;
    animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
    animation-duration: 0.6s;
    transition: color var(--transition);
}
.sparkle-button:is(:hover, :focus-visible) path {
    animation-name: bounce;
}
@keyframes bounce {
    35%, 65% {
        scale: var(--scale);
    }
}
.sparkle path:nth-of-type(1) {
    --scale: 0.5;
    --delay: 0.1;
    --base: 40%;
}
.sparkle path:nth-of-type(2) {
    --scale: 1.5;
    --delay: 0.2;
    --base: 20%;
}
.sparkle path:nth-of-type(3) {
    --scale: 2.5;
    --delay: 0.35;
    --base: 30%;
}
.sparkle-button:before {
    content: "";
    position: absolute;
    inset: -0.2em;
    z-index: -1;
    border: 0.25em solid hsl(260 97% 50% / 0.5);
    border-radius: 100px;
    opacity: var(--active, 0);
    transition: opacity var(--transition);
}
.spark {
    position: absolute;
    inset: 0;
    border-radius: 100px;
    rotate: 0deg;
    overflow: hidden;
    mask: linear-gradient(white, transparent 50%);
    animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}
@keyframes flip {
    to {
        rotate: 360deg;
    }
}
.spark:before {
    content: "";
    position: absolute;
    width: 200%;
    aspect-ratio: 1;
    top: 0%;
    left: 50%;
    z-index: -1;
    translate: -50% -15%;
    rotate: 0;
    transform: rotate(-90deg);
    opacity: calc((var(--active)) + 0.4);
    background: conic-gradient(
        from 0deg,
        transparent 0 340deg,
        white 360deg
    );
    transition: opacity var(--transition);
    animation: rotate var(--spark) linear infinite both;
}
.spark:after {
    content: "";
    position: absolute;
    inset: var(--cut);
    border-radius: 100px;
}
.backdrop {
    position: absolute;
    inset: var(--cut);
    background: var(--bg);
    border-radius: 100px;
    transition: background var(--transition);
}
@keyframes rotate {
    to {
        transform: rotate(90deg);
    }
}
@supports(selector(:has(:is(+ *)))) {
    body:has(button:is(:hover, :focus-visible)) {
        --active: 1;
        --play-state: running;
    }
    .bodydrop {
        display: none;
    }
}
.sparkle-button:is(:hover, :focus-visible) ~ :is(.bodydrop, .particle-pen) {
    --active: 1;
    --play-state: runnin;
}
.sparkle-button:is(:hover, :focus-visible) {
    --active: 1;
    --play-state: running;
}
.sp {
    position: relative;
}
.particle-pen {
    position: absolute;
    width: 200%;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    -webkit-mask: radial-gradient(white, transparent 65%);
    z-index: -1;
    opacity: var(--active, 0);
    transition: opacity var(--transition);
}
.particle {
    fill: white;
    width: calc(var(--size, 0.25) * 1rem);
    aspect-ratio: 1;
    position: absolute;
    top: calc(var(--y) * 1%);
    left: calc(var(--x) * 1%);
    opacity: var(--alpha, 1);
    animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
    transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
    z-index: -1;
    animation-play-state: var(--play-state, paused);
}
.particle path {
    fill: hsl(0 0% 90%);
    stroke: none;
}
.particle:nth-of-type(even) {
    animation-direction: reverse;
}
@keyframes float-out {
    to {
        rotate: 360deg;
    }
}
.text {
    translate: 2% -6%;
    letter-spacing: 0.01ch;
    background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
    -webkit-background-clip: text;
    color: transparent;
    transition: background var(--transition);
}
.sparkle-button svg {
    inline-size: 1.25em;
    translate: -25% -5%;
}


/* mobile  */
@media (max-width: 768px) {

    .continer {
        margin: 10%;
        max-width: 500px;
    }

    .continer h1 {
        font-size: 2rem;
    }

    .display {
        width: 80%;
        margin: 50px 0px;
        background-color: white;
        color: #333;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 26px 20px;
        border-radius: 5px;
        margin-bottom: 20px;
    }

    input {
        font-size: 1.5rem;
        width: 100%;
    }

    /* Copy Button */ 
    .copy {
        --button-diameter: 40px;
    }

    .sp {
        position: relative;
        width: 0;
    }
    .sparkle-button {
        font-size: 1rem;
    }
}
